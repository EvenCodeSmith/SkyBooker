// <auto-generated />
using System;
using BookingService;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookingService.Migrations
{
    [DbContext(typeof(BookingDbContext))]
    [Migration("20250606092704_TestDataBooking3")]
    partial class TestDataBooking3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookingService.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FlightId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassengerFirstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassengerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassengerLastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TicketCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Bookings");

                    b.HasData(
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2025, 6, 6, 9, 27, 4, 430, DateTimeKind.Utc).AddTicks(1386),
                            FlightId = "LX100",
                            PassengerFirstname = "Max",
                            PassengerId = "user-001",
                            PassengerLastname = "Muster",
                            TicketCount = 1,
                            UpdatedAt = new DateTime(2025, 6, 6, 9, 27, 4, 430, DateTimeKind.Utc).AddTicks(1387)
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2025, 6, 6, 9, 27, 4, 430, DateTimeKind.Utc).AddTicks(1390),
                            FlightId = "LH222",
                            PassengerFirstname = "Lisa",
                            PassengerId = "user-002",
                            PassengerLastname = "Meier",
                            TicketCount = 2,
                            UpdatedAt = new DateTime(2025, 6, 6, 9, 27, 4, 430, DateTimeKind.Utc).AddTicks(1391)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
